<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Tech.</title><link href="http://osdaniellee.github.io/" rel="alternate"></link><link href="http://osdaniellee.github.io/feeds/all.atom.xml" rel="self"></link><id>http://osdaniellee.github.io/</id><updated>2016-03-15T19:40:00+08:00</updated><entry><title>如何用git开始github之旅</title><link href="http://osdaniellee.github.io/articles/git-github-order-post.html" rel="alternate"></link><updated>2016-03-15T19:40:00+08:00</updated><author><name>lidatong</name></author><id>tag:osdaniellee.github.io,2016-03-15:articles/git-github-order-post.html</id><summary type="html">&lt;h2&gt;下载并安装git，注册github账号&lt;/h2&gt;
&lt;p&gt;下载安装注册都很容易，如果在安装git时不知道如何选，一路默认也是可以的。&lt;/p&gt;
&lt;h2&gt;安装SSH key&lt;/h2&gt;
&lt;p&gt;要使用Github，必须先在本机上生成SSH key，并且将其添加到自己github账号的SSH Keys上。产生的方法是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
然后一路回车，结束后还需要将SSH key添加到ssh-agent，方法为：
ssh-add ~/.ssh/id_rsa
之后就是需要将id_rsa.pub中的内容添加到github账号的SSH keys上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;常用的git指令&lt;/h2&gt;
&lt;p&gt;通常新建一个repository时，在一台新的电脑上，往往都需要用到的相关指令：&lt;/p&gt;
&lt;p&gt;在github上new了一个xxx.github.io.git库之后，可以：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git init
git add .
git commit -m &amp;quot;test&amp;quot;
git remote add origin git@github.com:xxx/xxx.github.io.git
git push -u origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果是github上本来就存在了xxx.github.io.git，并有文件，可以：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git init
git remote add origin git@github.com:xxx/xxx.github.io.git
git pull
git add .
git commit -m &amp;quot;test&amp;quot;
git push -u origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后一步如果不成功，比如出现错误如：
&lt;img alt="image" src="..\images\gitpush出现rejected错误.png" /&gt;
则使用强制push：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git push -f
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一般都能够成功。&lt;/p&gt;</summary><category term="Github"></category><category term="git，指令"></category></entry><entry><title>py2exe编译py3文件方法</title><link href="http://osdaniellee.github.io/articles/python-py2exe-post.html" rel="alternate"></link><updated>2016-03-15T16:00:00+08:00</updated><author><name>lidatong</name></author><id>tag:osdaniellee.github.io,2016-03-15:articles/python-py2exe-post.html</id><summary type="html">&lt;h2&gt;使用py2exe编译py3文件&lt;/h2&gt;
&lt;p&gt;首先下载&lt;a href="https://pypi.python.org/pypi/py2exe"&gt;py2exe&lt;/a&gt;，注意要找到
对应的版本，有对应py2的，有对应py3的。&lt;/p&gt;
&lt;p&gt;在要编译的xx.py文件同目录下新建setup2exe.py，内容为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;distutils.core&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;py2exe&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="c1"&gt;#this allows to run it with a simple double click.&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;py2exe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;py2exe_options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;includes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,],&lt;/span&gt;  &lt;span class="c1"&gt;# 如果打包文件中有PyQt代码，则这句为必须添加的&lt;/span&gt;
        &lt;span class="c1"&gt;#&amp;quot;excludes&amp;quot;: [&amp;quot;CommuMain&amp;quot;,&amp;quot;Para&amp;quot;,&amp;quot;Translate&amp;quot;,],&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;dll_excludes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MSVCP90.dll&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,],&lt;/span&gt;  &lt;span class="c1"&gt;# 这句必须有，不然打包后的程序运行时会报找不到MSVCP90.dll，如果打包过程中找不到这个文件，请安装相应的库&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;compressed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;optimize&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;ascii&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;bundle_files&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# 关于这个参数请看第三部分中的问题(2)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;PyQt Demo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;windows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Main_UpSite.py&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,],&lt;/span&gt;   &lt;span class="c1"&gt;# 括号中更改为你要打包的代码文件名&lt;/span&gt;
      &lt;span class="n"&gt;zipfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;py2exe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;py2exe_options&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在cmd下，执行上述文件：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;python setup2exe.py
即可。&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="Python，py2exe，可执行文件"></category></entry><entry><title>python读取二进制字节流的方法</title><link href="http://osdaniellee.github.io/articles/python-read-binary-bytes-post.html" rel="alternate"></link><updated>2016-03-15T15:40:00+08:00</updated><author><name>lidatong</name></author><id>tag:osdaniellee.github.io,2016-03-15:articles/python-read-binary-bytes-post.html</id><summary type="html">&lt;h2&gt;使用python读取二进制字节流文件的方法&lt;/h2&gt;
&lt;p&gt;使用C的fwrite直接将char[]的内容写到txt文件中是一种很常见
的写文件方式（尤其是在下位机等较为底层的应用场景），而我们
往往使用python读取文件更多的是考虑读取文件中的内容为字符形式
（包括字符串和数字），遇到这种一个一个char的情况就觉得非常棘手。&lt;/p&gt;
&lt;p&gt;其实在python中read(1)就是代表一个一个char来读取的作用，例子如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;with open(&amp;quot;QQQ6.TXT&amp;quot;, &amp;quot;rb&amp;quot;) as f:
    byte = f.read(1)
    byteList = list()
    while byte:
        ob = ord(byte)
        byteList.append(ob)
        byte = f.read(1)
    print(byteList)
    print(len(byteList)/64)
for i in range(5):
    l = byteList[i*64:(i+1)*64]
    print(l)
    print(len(l))
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;此为记录~&lt;/p&gt;</summary><category term="二进制字节，Python，文件读取，fwrite"></category></entry><entry><title>建博客的经验</title><link href="http://osdaniellee.github.io/articles/built-blog-post.html" rel="alternate"></link><updated>2016-03-13T17:38:00+08:00</updated><author><name>lidatong</name></author><id>tag:osdaniellee.github.io,2016-03-13:articles/built-blog-post.html</id><summary type="html">&lt;h2&gt;建设博客的选择&lt;/h2&gt;
&lt;p&gt;建设一个博客有非常多的选择，比如说在开源中国（osChina）开设一个账号
就能够拥有一个博客，比如在CSDN也有非常多的技术博客和人流量，
非常简单；另外，能够自己建设个网站，原本我想做的就是这么一件事——自己
购买个服务器使用Django搭建一个博客网站，自己维护；还有一种方法，是
在一些托管机构上面git静态网页，利用该机构提供的方法构建博客，本博客
采用的正是此方法。&lt;/p&gt;
&lt;p&gt;第一种方法没办法个性化，我之前在osChina上的博客没有继续写下去很大原因
就是博客非常丑的页面和非常麻烦累赘的操作，可以说是ugly的体验；第二种
方法则非常的麻烦，需要耗费更多的精力和时间，于我单纯地想要做个博客作为
使用的想法而言有可能会陷入纠结在做网站这样一件事情上了，可能会
得不偿失；第三种方法提供了一定的自由选择，并且相对简单，所以采用了这种方法。&lt;/p&gt;
&lt;h2&gt;使用Pelican建设博客的方法&lt;/h2&gt;
&lt;p&gt;采用第三种方法也有很多途径，通常是使用Jekyll或基于Jekyll之上来建博客，
由于Jekyll是使用Ruby的，而我对之非常陌生，当我发现Pelican能够用来取代
其作用而Pelican是使用Python时，我惊喜之——于我而言，采用自己熟悉的技术
做新的事情感到非常兴奋。以下是Pelican建设blog的方法。&lt;/p&gt;
&lt;p&gt;特别感谢&lt;a href="http://www.tuicool.com/articles/INjiui"&gt;“使用Pelican + Markdown + GitHub Pages来撰写Blog”&lt;/a&gt;
博文的博主,我是根据他的博文指导来完成的。&lt;/p&gt;
&lt;p&gt;需要安装的软件：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python3.4（2.7也可以，只是刚好我是new python的支持者）&lt;/p&gt;
&lt;p&gt;Pelican&lt;/p&gt;
&lt;p&gt;markdown&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Pelican和markdown的安装方法非常简单，使用python自带的pip：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pip install pelican markdown&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;相对比Jekyll繁杂的安装操作是不是感动到哭？！&lt;/p&gt;
&lt;p&gt;之后，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mkdir blog&lt;/p&gt;
&lt;p&gt;cd blog&lt;/p&gt;
&lt;p&gt;pelican-quickstart&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;根据所需对问题进行y或者n，特别注意问及GitHub Pages和username.github.io
时需要回答y就可以了。&lt;/p&gt;
&lt;p&gt;之后配置pelicanconf.py。给出我的配置文件：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="c1"&gt;# Site settings&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;lidatong&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_EMAIL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;osdaniellee@gmail.com&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;Tech.&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TAGLINE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;All about Tech.&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://osdaniellee.github.io&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_DATE_FORMAT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Asia/Shanghai&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;zh&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# Feed generation is usually not desired when developing&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;TRANSLATION_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

&lt;span class="c1"&gt;# Social widget&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Github&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://github.com/osDanielLee/osDanielLee.github.io&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="c1"&gt;#(&amp;#39;Python&amp;#39;, &amp;#39;http://www.python.org&amp;#39;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;MENUITEMS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Content path&lt;/span&gt;
&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;PAGE_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;images&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;files&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;EXTRA_PATH_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;files/robots.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;robots.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;images/favicon.ico&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;favicon.ico&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="c1"&gt;# Disqus&lt;/span&gt;
&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;u&amp;quot;osdaniellee&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# URL settings&lt;/span&gt;
&lt;span class="n"&gt;PAGINATION_PATTERNS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{base_name}/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{base_name}/index.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{base_name}/page/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{base_name}/page/{number}.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;CATEGORY_URL&lt;/span&gt;            &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;category/{slug}/&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_SAVE_AS&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;category/{slug}/index.html&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;TAG_URL&lt;/span&gt;                 &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tag/{slug}/&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TAG_SAVE_AS&lt;/span&gt;             &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tag/{slug}/index.html&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;articles/{slug}.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;articles/{slug}.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;PAGE_LANG_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

&lt;span class="c1"&gt;# Feed&lt;/span&gt;
&lt;span class="n"&gt;FEED_DOMAIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SITEURL&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feeds/all.atom.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;.atom.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TRANSLATION_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

&lt;span class="c1"&gt;# Theme &lt;/span&gt;
&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pelican-themes/built-texts&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;#COVER_BG_COLOR = &amp;#39;#375152&amp;#39;&lt;/span&gt;


&lt;span class="c1"&gt;# Plugin&lt;/span&gt;
&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pelican-plugins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sitemap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;gravatar&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Sitemap&lt;/span&gt;
&lt;span class="n"&gt;SITEMAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;format&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;priorities&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;indexes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;changefreqs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;indexes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;daily&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;daily&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;weekly&amp;#39;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Uncomment following line if you want document-relative URLs when developing&lt;/span&gt;
&lt;span class="n"&gt;RELATIVE_URLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;特别注意，在参考的链接中的配置文件并没有：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CATEGORY_URL            = &amp;#39;category/{slug}/&amp;#39;
CATEGORY_SAVE_AS        = &amp;#39;category/{slug}/index.html&amp;#39;

TAG_URL                 = &amp;#39;tag/{slug}/&amp;#39;
TAG_SAVE_AS             = &amp;#39;tag/{slug}/index.html&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;因此，我在使用过程中出现了错误：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;E:\workspace\MyBlog&amp;gt;make html
pelican ./content -o ./output -s ./pelicanconf.py
CRITICAL: RuntimeError: File E:\workspace\MyBlog\output\tag/index.html is to be overwritten
Makefile:66: recipe for target &amp;#39;html&amp;#39; failed
make: *** [html] Error 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后，在github的&lt;a href="https://github.com/getpelican/pelican/issues/1223"&gt;Pelican issue&lt;/a&gt;中得到解答，增加以上的配置不再出现error。&lt;/p&gt;
&lt;p&gt;另外一个配置文件publishconf.py内容为：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="c1"&gt;# This file is only used if you use `make publish` or&lt;/span&gt;
&lt;span class="c1"&gt;# explicitly specify it as your config file.&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;curdir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelicanconf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://osdaniellee.github.io&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;RELATIVE_URLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feeds/all.atom.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;.atom.xml&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DELETE_OUTPUT_DIRECTORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c1"&gt;# Following items are often useful when publishing&lt;/span&gt;

&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;u&amp;quot;osdaniellee&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#GOOGLE_ANALYTICS = &amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;运行make html成功后，即可将output的内容上传到github的xxx.github.io仓库中，
过会刷新xxx.github.io就能够运行。&lt;/p&gt;
&lt;p&gt;需要绑定自己的域名，在项目中增加CNAME并添加一条记录，如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;www.lidatong.work&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;并在域名解析网站添加CNAME记录，说明www.lidatong.work这个域名指向xxx.github.io即可。&lt;/p&gt;
&lt;p&gt;至此，使用markdown就可以愉快的写博客啦~&lt;/p&gt;
&lt;p&gt;具体参考我的&lt;a href="https://github.com/osDanielLee/MyBlog"&gt;github&lt;/a&gt;。&lt;/p&gt;</summary><category term="博客，经验"></category></entry><entry><title>博客宗旨和计划</title><link href="http://osdaniellee.github.io/articles/plan-post.html" rel="alternate"></link><updated>2016-03-13T16:41:00+08:00</updated><author><name>lidatong</name></author><id>tag:osdaniellee.github.io,2016-03-13:articles/plan-post.html</id><summary type="html">&lt;h2&gt;博客宗旨&lt;/h2&gt;
&lt;p&gt;建设博客是因为在很多方面都遇到各种各样的问题，虽然都能够得以解决，
却很快就会随着时间而遗忘。以往大都是使用类似与“有道云笔记”的工具
进行记录和思考，并且在很多时候“有道云笔记”还承载着收集各种材料、
知识的作用，导致其中的内容非常浩瀚庞大，以至于在需要回头参考和借鉴
时没办法迅速找到对应的内容；同时，“有道云笔记”作为材料收集时是非常
有效的，但是在那种工具提供的便捷性之外，却能将自我的独立思考和总结
的念头打消掉。&lt;/p&gt;
&lt;p&gt;博客恰巧能够承担这样一个自我思考、总结的功能，
作为自己记录成长和进步的一个地方，成为在时间的冲刷下
滞留下来的有价值的东西，承载着过去，希望也能够开启未来。&lt;/p&gt;
&lt;h2&gt;近期计划&lt;/h2&gt;
&lt;p&gt;由于最近正处于学习和工作的转换期，细细想起来需要做的事情还真不少。
总体而言也就两点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;记载过去的问题，进步，思绪，经验，教训；&lt;/li&gt;
&lt;li&gt;继续前进，记录现在遇到的问题，学习上、技术上的需要记录的东西。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;关于过去的计划&lt;/h3&gt;
&lt;p&gt;有关过去方面，主要是技术的积累方面，有以下几个方面：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Hadoop技术，包括毕设中设计的Hadoop，Spark，以及2015年暑假
在百度实习时遇到的问题和解决等等；此外，对于Hadoop技术中了解到
的关键点都需要以博客的形式记录下来；&lt;/li&gt;
&lt;li&gt;PyQt和Python做PC图形界面方面知识积累和经验总结；&lt;/li&gt;
&lt;li&gt;Unix高级编程中常用知识的总结（结合上课时写的博客进行重温）；&lt;/li&gt;
&lt;li&gt;机器学习知识和相关数学知识的积累及总结，包括自己手写的简单
机器学习算法实现；&lt;/li&gt;
&lt;li&gt;其他零碎学习的知识的总结，包括Python建站（Django），包括这次
建设博客（github pages，Pelican）等。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;关于现在和未来的计划&lt;/h3&gt;
&lt;p&gt;现在需要做的更多是学习有关机器学习的知识以及其相关知识（工作需要），
有关现在的计划：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;概率和统计等数学知识的重温和总结；&lt;/li&gt;
&lt;li&gt;机器学习相关书籍（《统计学习方法》，《PRML》等）的学习以及总结。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;在现在之外的，未来需要做的而目前停留在想法阶段的事有：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;使用Golang实现分布式存储和计算框架，以及机器学习算法；&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;努力之~&lt;/p&gt;</summary><category term="计划，打算"></category></entry><entry><title>Linux文件操作总结</title><link href="http://osdaniellee.github.io/articles/linux-post.html" rel="alternate"></link><updated>2016-03-12T15:31:00+08:00</updated><author><name>lidatong</name></author><id>tag:osdaniellee.github.io,2016-03-12:articles/linux-post.html</id><summary type="html">&lt;h1&gt;linux文件操作总结&lt;/h1&gt;
&lt;p&gt;linux的文件操作非常常用，但是又容易忘记。&lt;/p&gt;
&lt;p&gt;以C操作为例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
    &lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
    &lt;span class="n"&gt;read&lt;/span&gt;
    &lt;span class="n"&gt;write&lt;/span&gt;
    &lt;span class="n"&gt;seek&lt;/span&gt;
    &lt;span class="n"&gt;open&lt;/span&gt;
    &lt;span class="n"&gt;close&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以上操作常用，记下方便查询&lt;/p&gt;
&lt;p&gt;just for test
&lt;img alt="image" src="..\images\screenshot.png" /&gt;&lt;/p&gt;</summary><category term="Linux"></category><category term="file operation"></category></entry></feed>